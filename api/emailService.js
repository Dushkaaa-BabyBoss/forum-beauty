import nodemailer from 'nodemailer';
// const nodemailer = require('nodemailer');
require('dotenv').config(); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ .env –¥–ª—è –±–µ–∑–ø–µ–∫–∏
export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({message: 'Method Not Allowed'})
  }

  const { email, name, surname, ticketType, amount, phone } = req.body;

  const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER, // –ó–º—ñ–Ω–Ω—ñ –∑ .env
      pass: process.env.EMAIL_PASS,
    },
  });
  
  // const sendEmail = (
  //   recipientEmail,
  //   name,
  //   surname,
  //   ticketType,
  //   amount,
  //   phone,
  // ) => {
    const mailOptions = {
      from: process.env.EMAIL_USER, // –í–∞—à email
      to: recipientEmail, // Email –ø–æ–∫—É–ø—Ü—è
      subject: '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∫—É–ø—ñ–≤–ª—ñ –∫–≤–∏—Ç–∫–∞',
      html: `
        <h1>–ü—Ä–∏–≤—ñ—Ç, ${name} ${surname}!</h1>
        <p>–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: ${phone}</p>
  
        <p>üéü –í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–∏–¥–±–∞–ª–∏ –∫–≤–∏—Ç–æ–∫.</p>
  
        <p>üìå –¢–∏–ø –∫–≤–∏—Ç–∫–∞: ${ticketType}</p>
        <p>üí≥ –°—É–º–∞: ${amount} PLN</p>
        <p>–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª <a href="${ticketType === 'Standart' ? 'https://t.me/+t4G8dYDzR6IyYjEy' : 'https://t.me/+zhdBMISyKA4yYTgy'}">–¢–≤—ñ–π ${ticketType} —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª</a></p>
  
        <p>üìÖ –î–∞—Ç–∞ –∑–∞—Ö–æ–¥—É: 15 —Ç—Ä–∞–≤–Ω—è 2025</p>
        <p>üìç –ú—ñ—Å—Ü–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è: –í–∞—Ä—à–∞–≤–∞, –ü–æ–ª—å—â–∞</p>
  
        <p>üîó –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –±—É–¥–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ.</p>
  
        <p>–î—è–∫—É—î–º–æ! –î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ! üòä</p>
  
        <p>–ó –ø–æ–≤–∞–≥–æ—é,  </p>
        <p>–û—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—ó</p>
      `,
    };

    try {
      await transporter.sendMail(mailOptions);
      res.status(200).json({ message: 'Email sent successfully' });
    } catch (error) {
      console.error('Email sending error: ', error);
      res.status(500).json({ message: 'Failed to send email' });
    }

  // return transporter.sendMail(mailOptions);
};

module.exports = { sendEmail };
